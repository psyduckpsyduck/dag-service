generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["multiSchema", "postgresqlExtensions"]
    output          = "../dist"
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    schemas    = ["dag-service"]
    extensions = [uuidOssp(map: "uuid-ossp")]
}

model Node {
    id   String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
    name String

    enclosingNodeId String @map("enclosing_node_id") @db.Uuid
    enclosingNode   Node   @relation("nodeEnclosure", fields: [enclosingNodeId], references: [id], onDelete: Cascade)
    enclosedNodes   Node[] @relation("nodeEnclosure")

    inEdges  Edge[] @relation("toNode")
    outEdges Edge[] @relation("fromNode")

    @@map("nodes")
    @@schema("dag-service")
}

model Edge {
    from String @map("from") @db.Uuid
    to   String @map("to") @db.Uuid

    fromNode Node @relation("fromNode", fields: [from], references: [id], onDelete: Cascade)
    toNode   Node @relation("toNode", fields: [to], references: [id], onDelete: Cascade)

    @@id([from, to])
    @@map("edges")
    @@schema("dag-service")
}
